<?php
//create and start the session
ini_set("session.save_path", "/home/unn_w16005124/sessionData");
session_start();
?>

<?php
    //Gets core tags, login form and title header passing pages as a paramter
    require_once ("functions.php");
    echo get_core_tags("Northumbria book Company | Order Books", "stylesheet");
    echo "\t<body>\n";
    get_login_form();

    echo get_title_header(array("index.php" => "Home",
                            "orderBooksForm.php" => "Order Books",
                            "chooseBookList.php" => "Admin",
                            "credits.php" => "Credits"), "navLinks");

    echo "<main>";
?>


<?php
/* This code dynamically generates a web page containing a form designed with the html required to display one
checkbox for each of the books currently held in the nbc_books database table has been provided for you in the
assessment section for the module on blackboard. The user can select one or more books that they are interested in
ordering by clicking the checkboxes.
Use the browser to look at the structure of the html generated by the php code. */

$url = "http://unn-izge1.newnumyspace.co.uk/KF5002/assessment/orderBooksFormInc.php";
$curl = curl_init($url);
curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);
$result = curl_exec($curl);
curl_close($curl);
echo $result;
?>

<?php
    echo "</main>";
?>
<!-- Here you need to add Javascript or a link to a script to process the form as required for the assignment -->
    <script type="text/javascript">
        //<![CDATA[
        'use strict';
        window.addEventListener('load', function start() {
            var form = document.getElementById("orderForm"); //Gets a reference to the form
            var totalPrice =0;                               //Variable for total price
            var hasSelectedAProduct = false;                 //Variable for if a product is selected for validation.

            //Check the form when submitted
            form.onsubmit = function (e) {
                return checkForm(this);
            };

            //When the submit button changes call the termsAndCondition function
            form.termsChkbx.onchange = termsAndConditionsCheck;

            //Get a referece is devilery type and add the cost if devlier to home is selected
            var deliveryType = form.querySelectorAll('input[type=radio]');
            for(var n=0; n< deliveryType.length; n++) {
                var price; //price of te devliery for some reason making this 0 produces an error where when you click on
                           // collect from store the current price isn't removed from the total

                //Finds the radio button that is currently checked
                if(deliveryType[n].checked) {
                    price = parseFloat(deliveryType[n].dataset.price);
                    totalPrice += price;

                    form.total.value = totalPrice.toFixed(2);
                }

                //When the devliery type is changed
                deliveryType[n].onchange = function () {
                    //Removes the current price from the total
                    totalPrice -= price;
                    //Update the price variable with a new price
                    price = parseFloat(this.dataset.price);
                    //Add the new price to te total
                    totalPrice += price;
                    //Update the price box using toFixed() for rounding to 2 DP
                    form.total.value = totalPrice.toFixed(2);
                }
            }


            //Get a reference to the product
            var product = form.querySelectorAll('input[type=checkbox]');

            //Taking off 1 from the total length will stop the checkbox for terms and conditions being selected
            var totalProductLength = product.length -1;
            for(var i=0; i< totalProductLength; i++) {
                product[i].onchange = calculateCost;

                form.total.value = totalPrice.toFixed(2);
            }
                

           //Function calcuates gets the cost of the products and updates the price
            function calculateCost() {
                'use strict';

                //Ternary if. If product selected add to the total price and make semected product = true. If unchekced
                //Removed the price and make selected a product = false.
                (this.checked) ? totalPrice += parseFloat(this.dataset.price) : totalPrice -= parseFloat(this.dataset.price);
                (this.checked) ? hasSelectedAProduct = true : hasSelectedAProduct = false;

                //Sends the total to the total price box
                form.total.value = totalPrice.toFixed(2);
            }


            //Hides or displays the company name box depeneding on what is selected from the select list
            form.customerType.onchange = function () {
                var customerTradeBox = document.getElementById('tradeCustDetails');
                if (form.customerType.value === "trd") {
                    customerTradeBox.style.visibility = "visible";
                } else {
                    customerTradeBox.style.visibility = "hidden";
                }
            };


            //Function checks that the form is complete
            function checkForm(form) {
                'use strict';
                //trim() === "" checks if the input boxes are empty
                if(form.forename.value.trim() === '') {
                    alert("Forename is empty");
                    theForm.forename.focus();
                    return false;
                }
                if (form.surname.value.trim() === '') {
                    alert("Surname is empty");
                    theForm.surname.focus();
                    return false;
                }
                if (form.customerType.value === "trd") {
                    if(theForm.companyName.value.trim() === '') {
                        alert("Company name is empty");
                        theForm.companyName.focus();
                        return false;
                    }
                }
                if(form.customerType.value === "") {
                    alert("You need to select a customer type");
                    theForm.customerType.focus();
                    return false;
                }
                //Hasn't selected at least 1 book
                if(!hasSelectedAProduct) {
                    alert("You need to select at least book");
                    return false;
                }
                return true;
            }
            
            function termsAndConditionsCheck() {
                'use strict';

                var submitButton = this.form.querySelector('input[type=submit]');

                //If button disabled property will be opposite if the t&c box is checked. For example if the t&c box is
                //checked then submitButton..disabled = false.
                submitButton.disabled = !this.checked;

                //Use a ternary if statement to change the colour ad style of the parent node which is a label when the checkbox
                //is ticked or un-ticked
                this.parentNode.style.color = (this.checked) ? 'black' : 'red';
                this.parentNode.style.fontWeight = (this.checked) ? ' inherit' : 'bold';
            }
        }); //End addActionListener
        //]]>
    </script>
</body>
</html>